{"version":3,"file":"static/js/239.1fab1d48.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/pages/Home.jsx","components/service/Api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport propTypes from 'prop-types';\nimport { FaFilm } from 'react-icons/fa';\n\nimport placeholder from '../images/placeholder.jpg';\n\nexport const List = styled.ul`\n  list-style: none;\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const Item = styled.li`\n  padding: 5px 12px;\n  border-bottom: 1px solid transparent;\n  position: relative;\n`;\n\nexport const LinkDetails = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  margin: 1px;\n\n  &:hover,\n  &:focus {\n    color: #064e8a;\n  }\n\n  @media screen and (min-width: 768px) {\n    &:hover::after,\n    &:focus::after {\n      content: '';\n      background-image: ${props =>\n        props.cover\n          ? `url('https://image.tmdb.org/t/p/w500/${props.cover}')`\n          : `url(${placeholder})`};\n\n      background-size: cover;\n      width: 160px;\n      height: 240px;\n      display: block;\n      border-radius: 4px;\n      border: 1px solid rgba(43, 134, 197);\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: absolute;\n      top: -140px;\n      left: 400px;\n      z-index: 1;\n    }\n  }\n`;\n\nexport const LogoIcon = styled(FaFilm)`\n  width: 20px;\n  height: 20px;\n  position: relative;\n  right: 6px;\n  top: 5px;\n  z-index: 1;\n  opacity: 0.7;\n  margin-bottom: 10px;\n`;\n\nLinkDetails.propTypes = {\n  cover: propTypes.string,\n  placeholder: propTypes.string,\n};","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { List, Item, LinkDetails, LogoIcon } from './MovieList.styled';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(movie => (\n        <Item key={movie.id}>\n          <LinkDetails\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n          >\n            <LogoIcon /> {movie.title}\n          </LinkDetails>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;","import React, { useEffect, useState } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport { fetchTrendingMovies } from '../service/Api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    // Отримання списку популярних фільмів з API\n    const fetchData = async () => {\n      try {\n        const movies = await fetchTrendingMovies(); // Call the fetchTrendingMovies function\n        setTrendingMovies(movies); // Update the trendingMovies state with the fetched movies\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData(); // Call the fetchData function to fetch the trending movies\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending Movies</h2>\n      <SkeletonTheme baseColor=\"#dddddd\" highlightColor=\"#a5a5a5\">\n        {trendingMovies.length === 0 ? (\n          <Skeleton\n            count={15}\n            style={{ height: 30, width: 300, marginTop: 15 }}\n          />\n        ) : (\n          <MovieList films={trendingMovies} />\n        )}\n      </SkeletonTheme>\n    </div>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","LinkDetails","Link","_templateObject3","props","cover","concat","placeholder","LogoIcon","FaFilm","_templateObject4","propTypes","_ref","films","location","useLocation","_jsx","children","map","movie","_jsxs","to","id","state","from","poster_path","title","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","fetchTrendingMovies","sent","t0","console","error","stop","apply","arguments","SkeletonTheme","baseColor","highlightColor","length","Skeleton","count","style","height","width","marginTop","MovieList","axios","params","api_key","language","response","abrupt","data","results","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x","handleSearch","_ref3","_callee3","movieName","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}